*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  margin: 0;
}

/* We calculated the length of our X line using trigonometry, 
based on the height, knowing it forms a 45-degree angle due 
to our rotation. Since this creates a 90-degree triangle, we 
precisely determine the length needed, which is the square 
root of 2 times the height. After this multiplication, since 
our line width exceeds 0 pixels, we simply offset it by half 
the line size to ensure perfect alignment. */

/* CSS Variables */
:root {
  --bar-width: 60px;
  --bar-height: 8px;
  --hamburger-gap: 6px;
  --foreground: #333;
  --background: white;
  --hamburger-margin: 20px;
  --animation-timing: 200ms ease-in-out;
  --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

.hamburgerMenu {
  --x-width: calc(var(--hamburger-height) * 1.41421356237);

  display: flex;
  flex-direction: column;
  gap: var(--hamburger-gap);
  width: max-content;
  position: absolute;
  top: var(--hamburger-margin);
  left: var(--hamburger-margin);
  z-index: 2;
  cursor: pointer;
}

.hamburgerMenu::before,
.hamburgerMenu::after,
.hamburgerMenu input {
  content: "";
  width: var(--bar-width);
  height: var(--bar-height);
  background-color: var(--foreground);
  border-radius: 9999px;
  transform-origin: left center;
  transition: opacity var(--animation-timing), width var(--animation-timing);
}

.hamburgerMenu input {
  appearance: none;
  padding: 0;
  margin: 0;
  outline: none;
  pointer-events: none;
}

.hamburgerMenu:has(input:checked)::before {
  rotate: 45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / -2);
}

.hamburgerMenu:has(input:checked)::after {
  rotate: -45deg;
  width: var(--x-width);
  translate: 0 calc(var(--bar-height) / 2);
}

.hamburgerMenu input:checked {
  opacity: 0;
  width: 0;
}
